class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        
        def combRec(nums,start,target,sofar):
            '''
            Input: candidates = [2,3,5], target = 8,
            A solution set is:
            [
              [2,2,2,2],
              [2,3,3],
              [3,5]
            ]
            
            To allow repetition do not specify start in the for loop
            
            '''
            
            if target == 0: 
                #print("sofar:{}".format(sofar))
                result.add(tuple(sorted(sofar)))
                return
            
            if target < 0:
                return
            
            if start > len(nums):
                return
              
            # avoid mentioning start here to allow duplicates
            for i in range(len(nums)):
                combRec(nums,i+1,target-nums[i],sofar+[nums[i]])
            
            
        result = set()
        combRec(candidates,0,target,[])
        return [list(tup) for tup in result]
        
